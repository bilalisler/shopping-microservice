version: '3.1'

services:
  mongo:
    image: mongo
    restart:
      on-failure
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ./migrations/:/docker-entrypoint-initdb.d/
      - ./docker/mongo_data:/data/db

  mongo-express:
    image: mongo-express
    restart:
      on-failure
    depends_on:
      - mongo
    ports:
      - "${MONGO_UI_PORT}:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: express
      ME_CONFIG_BASICAUTH_PASSWORD: 123456
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/


#  redis:
#    image: redis:latest
#    restart: always
#    ports:
#      - 6379:6379
#    networks:
#      - redis-network
#    environment:
#      - REDIS_DATABASES=16
#
#  redis-commander:
#    image: rediscommander/redis-commander:latest
#    platform: linux/amd64
#    environment:
#      - REDIS_HOSTS=local:redis:6379
#      - HTTP_USER=root
#      - HTTP_PASSWORD=qwerty
#    ports:
#      - 8081:8081
#    networks:
#      - redis-network
#    depends_on:
#      - redis

networks:
  redis-network:
    driver: bridge

#  app:
#    image: app
#    build:
#      dockerfile: ./Dockerfile
#    depends_on:
#      - mongo
#      - rabbitmq
#    restart:
#      on-failure
#    ports:
#      - "${APP_PORT}:3000"
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:${APP_PORT}" ]
#      interval: 1m30s
#      timeout: 10s
#      retries: 3
#      start_period: 40s
